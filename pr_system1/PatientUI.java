/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pr_system1;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User PC
 */
public class PatientUI extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(PatientUI.class.getName());

    /**
     * Creates new form PatientUI
     */
    public PatientUI() {
        initComponents();
        setTableHeaders();
        displayPatients(); // Load data into table on startup
    }                   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayPatients = new javax.swing.JTable();
        btnAddPatientActionPerformed = new javax.swing.JButton();
        btnEditPatientActionPerformed = new javax.swing.JButton();
        jviewActionPerformed = new javax.swing.JButton();
        btnBackActionPerformed = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Patient Information");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 80, -1, -1));

        displayPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(displayPatients);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 212, 1141, 471));

        btnAddPatientActionPerformed.setText("Add Patient");
        btnAddPatientActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformedActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddPatientActionPerformed, new org.netbeans.lib.awtextra.AbsoluteConstraints(1032, 34, 163, 42));

        btnEditPatientActionPerformed.setText("Edit Patient");
        btnEditPatientActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPatientActionPerformedActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditPatientActionPerformed, new org.netbeans.lib.awtextra.AbsoluteConstraints(1032, 94, 163, 42));

        jviewActionPerformed.setText("View Patient");
        jviewActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jviewActionPerformedActionPerformed(evt);
            }
        });
        jPanel1.add(jviewActionPerformed, new org.netbeans.lib.awtextra.AbsoluteConstraints(1032, 154, 163, 42));

        btnBackActionPerformed.setText("Back");
        btnBackActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformedActionPerformed(evt);
            }
        });
        jPanel1.add(btnBackActionPerformed, new org.netbeans.lib.awtextra.AbsoluteConstraints(857, 34, 163, 42));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(618, 155, -1, -1));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 154, 202, -1));

        btnSearch.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(898, 156, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pr_system1/4.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-430, 0, 1680, 780));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformedActionPerformed
        AddPatientUI addForm = new AddPatientUI();
        addForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAddPatientActionPerformedActionPerformed

    private void btnEditPatientActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPatientActionPerformedActionPerformed
    int selectedRow = displayPatients.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "⚠️ Please select a patient to edit.");
        return;
    }

    // Get the patient ID from the first column
    int patientId = Integer.parseInt(displayPatients.getValueAt(selectedRow, 0).toString());

    // Open the EditPatientUI and pass the patientId
    EditPatientUI editUI = new EditPatientUI(patientId);
    editUI.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnEditPatientActionPerformedActionPerformed

    private void jviewActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jviewActionPerformedActionPerformed
    int selectedRow = displayPatients.getSelectedRow(); // replace tblPatients with your JTable name
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a patient first.");
        return;
    }

    int selectedId = (int) displayPatients.getValueAt(selectedRow, 0); // assumes patient_id is column 0
    new ViewPatientUI(selectedId).setVisible(true);
    this.dispose();
    }//GEN-LAST:event_jviewActionPerformedActionPerformed

    private void btnBackActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformedActionPerformed
        // TODO add your handling code here:
        MainMenu patientWindow = new MainMenu();
        patientWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformedActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
                    String q = txtSearch.getText().trim();
    searchPatients(q);
    }//GEN-LAST:event_btnSearchActionPerformed
    
    // Search patients by ID, first name, or last name
private void searchPatients(String q) {
    q = q.trim();
    if (q.isEmpty()) {
        displayPatients();
        return;
    }

    try (Connection conn = DBConnection.getConnection()) {
        String sql = "SELECT patient_id, first_name, last_name, birth_date, address, contact_no "
                   + "FROM patient_information "
                   + "WHERE patient_id LIKE ? OR first_name LIKE ? OR last_name LIKE ?";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, "%" + q + "%");
        pst.setString(2, "%" + q + "%");
        pst.setString(3, "%" + q + "%");
        ResultSet rs = pst.executeQuery();

        DefaultTableModel model = (DefaultTableModel) displayPatients.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("patient_id"),
                rs.getString("first_name"),
                rs.getString("last_name"),
                rs.getString("birth_date"),
                rs.getString("address"),
                rs.getString("contact_no")
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error searching patients: " + e.getMessage());
    }
}

//  Display Patients Table
    private void displayPatients() {
        try (Connection conn = DBConnection.getConnection()) {
            String sql = "SELECT patient_id, first_name, last_name, birth_date, address, contact_no FROM patient_information";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            DefaultTableModel model = (DefaultTableModel) displayPatients.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("patient_id"),
                    rs.getString("first_name"),
                    rs.getString("last_name"),
                    rs.getString("birth_date"),
                    rs.getString("address"),
                    rs.getString("contact_no"),
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error displaying patients: " + e.getMessage());
        }
    }
    
    private void setTableHeaders() {
    String[] columnNames = {
        "ID", "First Name", "Last Name", "Birth Date", "Address", "Contact No."
    };

    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    displayPatients.setModel(model);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new PatientUI().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatientActionPerformed;
    private javax.swing.JButton btnBackActionPerformed;
    private javax.swing.JButton btnEditPatientActionPerformed;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTable displayPatients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jviewActionPerformed;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
