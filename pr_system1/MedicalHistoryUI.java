/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pr_system1;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import javax.swing.JOptionPane;
import java.util.logging.Logger;

/**
 *
 * @author User PC
 */
public class MedicalHistoryUI extends javax.swing.JFrame {
    
    private int patientId;
    private boolean isExistingRecord = false;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MedicalHistoryUI.class.getName());

    /**
     * Creates new form MedicalHistoryUI
     */
    public MedicalHistoryUI() {
        initComponents();
        loadPatients();

        // group radio buttons
        ButtonGroup hypGroup = new ButtonGroup();
        hypGroup.add(rbHypYes);
        hypGroup.add(rbHypNo);

        ButtonGroup diaGroup = new ButtonGroup();
        diaGroup.add(rbDiaYes);
        diaGroup.add(rbDiaNo);

        ButtonGroup astGroup = new ButtonGroup();
        astGroup.add(rbAsthmaYes);
        astGroup.add(rbAsthmaNo);

        ButtonGroup heartGroup = new ButtonGroup();
        heartGroup.add(rbHeartYes);
        heartGroup.add(rbHeartNo);

        ButtonGroup csGroup = new ButtonGroup();
        csGroup.add(rbCSYes);
        csGroup.add(rbCSNo);

        // default "No" selection
        rbHypNo.setSelected(true);
        rbDiaNo.setSelected(true);
        rbAsthmaNo.setSelected(true);
        rbHeartNo.setSelected(true);
        rbCSNo.setSelected(true);

        this.patientId = -1;
        lblPatientName.setText("Select a patient...");
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblPatientName1 = new javax.swing.JLabel();
        lblPatientName2 = new javax.swing.JLabel();
        lblPatientName3 = new javax.swing.JLabel();
        lblPatientName4 = new javax.swing.JLabel();
        lblPatientName5 = new javax.swing.JLabel();
        lblPatientName6 = new javax.swing.JLabel();
        lblPatientName7 = new javax.swing.JLabel();
        btnSave1 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        rbHypYes = new javax.swing.JRadioButton();
        rbDiaYes = new javax.swing.JRadioButton();
        txtAllergies = new javax.swing.JTextField();
        txtOtherConditions = new javax.swing.JTextField();
        rbHypNo = new javax.swing.JRadioButton();
        rbDiaNo = new javax.swing.JRadioButton();
        rbHeartNo = new javax.swing.JRadioButton();
        rbAsthmaNo = new javax.swing.JRadioButton();
        rbCSNo = new javax.swing.JRadioButton();
        rbCSYes = new javax.swing.JRadioButton();
        rbAsthmaYes = new javax.swing.JRadioButton();
        rbHeartYes = new javax.swing.JRadioButton();
        btnBack = new javax.swing.JButton();
        cmbPatient = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setBackground(new java.awt.Color(0, 51, 153));
        lblTitle.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Medical History");
        lblTitle.setOpaque(true);
        jPanel1.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 63, -1, -1));

        lblPatientName.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName.setText("Patient Name:");
        jPanel1.add(lblPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 168, -1, -1));

        lblPatientName1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName1.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName1.setText("Hypertension:");
        jPanel1.add(lblPatientName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 207, -1, -1));

        lblPatientName2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName2.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName2.setText("Diabetes:");
        jPanel1.add(lblPatientName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 246, -1, -1));

        lblPatientName3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName3.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName3.setText("Asthma:");
        jPanel1.add(lblPatientName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 285, -1, -1));

        lblPatientName4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName4.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName4.setText("Heart Disease:");
        jPanel1.add(lblPatientName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 324, -1, -1));

        lblPatientName5.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName5.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName5.setText("Previes C-Section:");
        jPanel1.add(lblPatientName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 363, -1, -1));

        lblPatientName6.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName6.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName6.setText("Allergies:");
        jPanel1.add(lblPatientName6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 426, -1, -1));

        lblPatientName7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPatientName7.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientName7.setText("Other Conditions:");
        jPanel1.add(lblPatientName7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 513, -1, -1));

        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 610, 90, 46));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 610, 90, 46));

        rbHypYes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbHypYes.setForeground(new java.awt.Color(255, 255, 255));
        rbHypYes.setText("Yes");
        jPanel1.add(rbHypYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 207, 98, -1));

        rbDiaYes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbDiaYes.setForeground(new java.awt.Color(255, 255, 255));
        rbDiaYes.setText("Yes");
        jPanel1.add(rbDiaYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 246, 98, -1));
        jPanel1.add(txtAllergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 402, 289, 69));
        jPanel1.add(txtOtherConditions, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 489, 289, 69));

        rbHypNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbHypNo.setForeground(new java.awt.Color(255, 255, 255));
        rbHypNo.setText("No");
        jPanel1.add(rbHypNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 207, -1, -1));

        rbDiaNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbDiaNo.setForeground(new java.awt.Color(255, 255, 255));
        rbDiaNo.setText("No");
        jPanel1.add(rbDiaNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 246, -1, -1));

        rbHeartNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbHeartNo.setForeground(new java.awt.Color(255, 255, 255));
        rbHeartNo.setText("No");
        jPanel1.add(rbHeartNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 324, -1, -1));

        rbAsthmaNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbAsthmaNo.setForeground(new java.awt.Color(255, 255, 255));
        rbAsthmaNo.setText("No");
        jPanel1.add(rbAsthmaNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 285, -1, -1));

        rbCSNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbCSNo.setForeground(new java.awt.Color(255, 255, 255));
        rbCSNo.setText("No");
        jPanel1.add(rbCSNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 363, -1, -1));

        rbCSYes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbCSYes.setForeground(new java.awt.Color(255, 255, 255));
        rbCSYes.setText("Yes");
        jPanel1.add(rbCSYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 363, 98, -1));

        rbAsthmaYes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbAsthmaYes.setForeground(new java.awt.Color(255, 255, 255));
        rbAsthmaYes.setText("Yes");
        jPanel1.add(rbAsthmaYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 285, 98, -1));

        rbHeartYes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbHeartYes.setForeground(new java.awt.Color(255, 255, 255));
        rbHeartYes.setText("Yes");
        jPanel1.add(rbHeartYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 324, 98, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 610, 90, 46));

        cmbPatient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatientActionPerformed(evt);
            }
        });
        jPanel1.add(cmbPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 167, 289, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pr_system1/26.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 710));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        String selected = (String) cmbPatient.getSelectedItem();
        if (selected == null || !selected.contains(" - ")) {
            JOptionPane.showMessageDialog(this, "Please select a valid patient.");
            return;
        }
        try {
            int selectedId = Integer.parseInt(selected.split(" - ")[0]);
            this.patientId = selectedId;
            saveMedicalHistory();
            clearFields(); // Clears after saving
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error saving medical history: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        String selected = (String) cmbPatient.getSelectedItem();
        if (selected != null && selected.contains(" - ")) {
            int selectedId = Integer.parseInt(selected.split(" - ")[0]);
            loadMedicalHistory(selectedId);
            this.patientId = selectedId;
        }

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        MainMenu patientWindow = new MainMenu();
        patientWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatientActionPerformed
        // TODO add your handling code here:
        String selected = (String) cmbPatient.getSelectedItem();
        if (selected != null && selected.contains(" - ")) {
            int selectedId = Integer.parseInt(selected.split(" - ")[0]);
            loadMedicalHistory(selectedId);
            this.patientId = selectedId;
        }
    }//GEN-LAST:event_cmbPatientActionPerformed

    private void loadPatients() {
        try (Connection conn = DBConnection.getConnection()) {
            PreparedStatement pst = conn.prepareStatement("SELECT patient_id, first_name, last_name FROM patient_information");
            ResultSet rs = pst.executeQuery();
            cmbPatient.removeAllItems();
            while (rs.next()) {
                int id = rs.getInt("patient_id");
                String fullName = rs.getString("first_name") + " " + rs.getString("last_name");
                cmbPatient.addItem(id + " - " + fullName);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading patients: " + e.getMessage());
        }
    }

    private void loadMedicalHistory(int patientId) {
        try (Connection conn = DBConnection.getConnection()) {
            String sql = "SELECT * FROM medical_history WHERE patient_id = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, patientId);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                isExistingRecord = true;
                rbHypYes.setSelected(rs.getInt("hypertension") == 1);
                rbHypNo.setSelected(rs.getInt("hypertension") == 0);
                rbDiaYes.setSelected(rs.getInt("diabetes") == 1);
                rbDiaNo.setSelected(rs.getInt("diabetes") == 0);
                rbAsthmaYes.setSelected(rs.getInt("asthma") == 1);
                rbAsthmaNo.setSelected(rs.getInt("asthma") == 0);
                rbHeartYes.setSelected(rs.getInt("heart_disease") == 1);
                rbHeartNo.setSelected(rs.getInt("heart_disease") == 0);
                rbCSYes.setSelected(rs.getInt("previous_cs") == 1);
                rbCSNo.setSelected(rs.getInt("previous_cs") == 0);
                txtAllergies.setText(rs.getString("allergies"));
                txtOtherConditions.setText(rs.getString("other_conditions"));
            } else {
                isExistingRecord = false;
                clearFields();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error loading medical history: " + ex.getMessage());
        }
    }

    private void saveMedicalHistory() {
        if (patientId <= 0) {
            JOptionPane.showMessageDialog(this, "Invalid patient ID.");
            return;
        }

        int hyp = rbHypYes.isSelected() ? 1 : 0;
        int dia = rbDiaYes.isSelected() ? 1 : 0;
        int ast = rbAsthmaYes.isSelected() ? 1 : 0;
        int heart = rbHeartYes.isSelected() ? 1 : 0;
        int cs = rbCSYes.isSelected() ? 1 : 0;
        String allergies = txtAllergies.getText().trim();
        String other = txtOtherConditions.getText().trim();

        try (Connection conn = DBConnection.getConnection()) {
            if (isExistingRecord) {
                String sql = "UPDATE medical_history SET hypertension=?, diabetes=?, asthma=?, heart_disease=?, previous_cs=?, allergies=?, other_conditions=? WHERE patient_id=?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, hyp);
                pst.setInt(2, dia);
                pst.setInt(3, ast);
                pst.setInt(4, heart);
                pst.setInt(5, cs);
                pst.setString(6, allergies);
                pst.setString(7, other);
                pst.setInt(8, patientId);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Medical history updated.");
            } else {
                String sql = "INSERT INTO medical_history (patient_id, hypertension, diabetes, asthma, heart_disease, previous_cs, allergies, other_conditions) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, patientId);
                pst.setInt(2, hyp);
                pst.setInt(3, dia);
                pst.setInt(4, ast);
                pst.setInt(5, heart);
                pst.setInt(6, cs);
                pst.setString(7, allergies);
                pst.setString(8, other);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Medical history saved.");
                isExistingRecord = true;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error saving medical history: " + ex.getMessage());
        }
    }

    private void clearFields() {
        rbHypNo.setSelected(true);
        rbDiaNo.setSelected(true);
        rbAsthmaNo.setSelected(true);
        rbHeartNo.setSelected(true);
        rbCSNo.setSelected(true);
        txtAllergies.setText("");
        txtOtherConditions.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        new MedicalHistoryUI().setVisible(true);
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cmbPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientName1;
    private javax.swing.JLabel lblPatientName2;
    private javax.swing.JLabel lblPatientName3;
    private javax.swing.JLabel lblPatientName4;
    private javax.swing.JLabel lblPatientName5;
    private javax.swing.JLabel lblPatientName6;
    private javax.swing.JLabel lblPatientName7;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton rbAsthmaNo;
    private javax.swing.JRadioButton rbAsthmaYes;
    private javax.swing.JRadioButton rbCSNo;
    private javax.swing.JRadioButton rbCSYes;
    private javax.swing.JRadioButton rbDiaNo;
    private javax.swing.JRadioButton rbDiaYes;
    private javax.swing.JRadioButton rbHeartNo;
    private javax.swing.JRadioButton rbHeartYes;
    private javax.swing.JRadioButton rbHypNo;
    private javax.swing.JRadioButton rbHypYes;
    private javax.swing.JTextField txtAllergies;
    private javax.swing.JTextField txtOtherConditions;
    // End of variables declaration//GEN-END:variables
}
